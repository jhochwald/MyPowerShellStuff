<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Edited with: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
	<!--
		Module: 		ToolBox
		Version:		0.0
	-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>append-classpath</command:name>
			<maml:description>
				<maml:para>Append a given path to the Classpath</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>append</command:verb>
			<command:noun>classpath</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Appends a given path to the Java Classpath. Useful if you still need that old
java crap!

By the way: I hate Java!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>append-classpath</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>append-classpath &quot;.&quot;</dev:code>
				<dev:remarks>
					<maml:para>Include the directory where you are to the Java Classpath</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Approve-MailAddress</command:name>
			<maml:description>
				<maml:para>REGEX check to see if a given Email address is valid</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Approve</command:verb>
			<command:noun>MailAddress</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Checks a given Mail Address against a REGEX Filter to see if it is RfC822
complaint
Not directly related is the REGEX check. Most mailer will not be able to handle
it if there
are non standard chars within the Mail Address...</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Approve-MailAddress</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Mail">
					<maml:name>Email</maml:name>
					<maml:description>
						<maml:para>e.g. &quot;joerg.hochwald@outlook.com&quot;
Email address to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Mail">
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>e.g. &quot;joerg.hochwald@outlook.com&quot;
Email address to check</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Mail Address to check against the RfC822 REGEX Filter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>boolean</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The Function name is changed!

Internal Helper function to check Mail addresses via REGEX to see if they are
RfC822 complaint before use them.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;No.Reply@bewoelkt.net&quot;</dev:code>
				<dev:remarks>
					<maml:para>True

Checks a given Mail Address (No.Reply@bewoelkt.net) against a REGEX Filter to
see if
it is RfC822 complaint</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;J&#246;rg.hochwald@gmail.com&quot;</dev:code>
				<dev:remarks>
					<maml:para>False

Checks a given Mail Address (JÃ¶rg.hochwald@gmail.com) against a REGEX Filter
to see if
it is RfC822 complaint, and it is NOT</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;Joerg hochwald@gmail.com&quot;</dev:code>
				<dev:remarks>
					<maml:para>False

Checks a given Mail Address (Joerg hochwald@gmail.com) against a REGEX Filter
to see
if it is RfC822 complaint, and it is NOT</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;Joerg.hochwald@gmail&quot;</dev:code>
				<dev:remarks>
					<maml:para>False

Checks a given Mail Address (Joerg.hochwald@gmail) against a REGEX Filter to see
if it is RfC822 complaint, and it is NOT</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Check-IPaddress</command:name>
			<maml:description>
				<maml:para>Check if a given IP Address seems to be valid</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Check</command:verb>
			<command:noun>IPaddress</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Check if a given IP Address seems to be valid.
We use the .NET function to do so. This is not 100% reliable,
but is enough most times.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Check-IPaddress</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="IP">
					<maml:name>IPAddress</maml:name>
					<maml:description>
						<maml:para>An IP Address you want to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="IP">
				<maml:name>IPAddress</maml:name>
				<maml:description>
					<maml:para>An IP Address you want to check</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Check-IPaddress</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Check-SessionArch</command:name>
			<maml:description>
				<maml:para>Show the CPU architecture</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Check</command:verb>
			<command:noun>SessionArch</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>You want to know if this is a 64BIT or still a 32BIT system?
Might be useful, maybe not!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Check-SessionArch</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Additional information about the function.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Check-SessionArch</dev:code>
				<dev:remarks>
					<maml:para>x64

Shows that the architecture is 64BIT and that the session also supports X64</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Clean-SysInfo</command:name>
			<maml:description>
				<maml:para>Companion for Update-SysInfo</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Clean</command:verb>
			<command:noun>SysInfo</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Cleanup for variables from the Update-SysInfo function</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Clean-SysInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clean-SysInfo</dev:code>
				<dev:remarks>
					<maml:para># Cleanup for variables from the Update-SysInfo function</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Clear-TempDir</command:name>
			<maml:description>
				<maml:para>Cleanup the TEMP Directory</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Clear</command:verb>
			<command:noun>TempDir</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Cleanup the TEMP Directory</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Clear-TempDir</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="RemoveOlderThen">
					<maml:name>Days</maml:name>
					<maml:description>
						<maml:para>Number of days, older files will be removed!</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="RemoveOlderThen">
				<maml:name>Days</maml:name>
				<maml:description>
					<maml:para>Number of days, older files will be removed!</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>30</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Additional information about the function.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-TempDir</dev:code>
				<dev:remarks>
					<maml:para>Freed 439,58 MB disk space

Will delete all Files older then 30 Days (This is the default)
You have to confirm every item before it is deleted</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-TempDir -Days:60 -Confirm:$false</dev:code>
				<dev:remarks>
					<maml:para>Freed 407,17 MB disk space

Will delete all Files older then 30 Days (This is the default)
You do not have to confirm every item before it is deleted</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Convert-IPtoDecimal</command:name>
			<maml:description>
				<maml:para>Converts an IP address to decimal.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Convert</command:verb>
			<command:noun>IPtoDecimal</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Converts an IP address to decimal value.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Convert-IPtoDecimal</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="IP">
					<maml:name>IPAddress</maml:name>
					<maml:description>
						<maml:para>An IP Address you want to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="IP">
				<maml:name>IPAddress</maml:name>
				<maml:description>
					<maml:para>An IP Address you want to check</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSObject</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Sometimes I need to have that info, so I decided it would be great to have a
functions who do the job!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Convert-IPtoDecimal -IPAddress &#39;127.0.0.1&#39;,&#39;192.168.0.1&#39;,&#39;10.0.0.1&#39;</dev:code>
				<dev:remarks>
					<maml:para>decimal        IPAddress
-------        ---------
2130706433    127.0.0.1
3232235521    192.168.0.1
167772161    10.0.0.1</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Convert-IPtoDecimal &#39;127.0.0.1&#39;,&#39;192.168.0.1&#39;,&#39;10.0.0.1&#39;</dev:code>
				<dev:remarks>
					<maml:para>decimal        IPAddress
-------        ---------
2130706433    127.0.0.1
3232235521    192.168.0.1
167772161    10.0.0.1</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>&#39;127.0.0.1&#39;,&#39;192.168.0.1&#39;,&#39;10.0.0.1&#39; |  Convert-IPtoDecimal</dev:code>
				<dev:remarks>
					<maml:para>decimal        IPAddress
-------        ---------
2130706433    127.0.0.1
3232235521    192.168.0.1
167772161    10.0.0.1</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-binhex</command:name>
			<maml:description>
				<maml:para>Convert a HEX Value to a String</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>binhex</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Converts a given HEX value back to human readable strings</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-binhex</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>binhex</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>binhex</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-binhex 0c</dev:code>
				<dev:remarks>
					<maml:para># Return the regular Value (12) of the given HEX 0c</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-UrlEncoded</command:name>
			<maml:description>
				<maml:para>Decodes a UrlEncoded string.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>UrlEncoded</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Decodes a UrlEncoded string.

Input can be either a positional or named parameters of type string or an
array of strings. The Cmdlet accepts pipeline input.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-UrlEncoded</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>A description of the InputObject parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>A description of the InputObject parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded &#39;http%3a%2f%2fwww.d-fens.ch&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch

# Encoded string is passed as a positional parameter to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded -InputObject &#39;http%3a%2f%2fwww.d-fens.ch&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch

# Encoded string is passed as a named parameter to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded -InputObject &#39;http%3a%2f%2fwww.d-fens.ch&#39;, &#39;http%3a%2f%2fwww.dfch.biz%2f&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch
http://www.dfch.biz/

# Encoded strings are passed as an implicit array to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded -InputObject @(&quot;http%3a%2f%2fwww.d-fens.ch&quot;, &quot;http%3a%2f%2fwww.dfch.biz%2f&quot;)</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch
http://www.dfch.biz/

# Encoded strings are passed as an explicit array to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>@(&quot;http%3a%2f%2fwww.d-fens.ch&quot;, &quot;http%3a%2f%2fwww.dfch.biz%2f&quot;) | ConvertFrom-UrlEncoded</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch
http://www.dfch.biz/

Encoded strings are piped as an explicit array to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>&quot;http%3a%2f%2fwww.dfch.biz%2f&quot; | ConvertFrom-UrlEncoded</dev:code>
				<dev:remarks>
					<maml:para>http://www.dfch.biz/

# Encoded string is piped to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>$r = @(&quot;http%3a%2f%2fwww.d-fens.ch&quot;, 0, &quot;http%3a%2f%2fwww.dfch.biz%2f&quot;) | ConvertFrom-UrlEncoded</dev:code>
				<dev:remarks>
					<maml:para>PS C:\scripts\PowerShell&gt; $r
http://www.d-fens.ch
0
http://www.dfch.biz/

# In case one of the passed strings is not a UrlEncoded encoded string, the
# plain string is returned. The pipeline will continue to execute and all
# strings are returned.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online Version: http://dfch.biz/biz/dfch/PS/System/Utilities/ConvertFrom-UrlEncoded/</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-binhex</command:name>
			<maml:description>
				<maml:para>Convert a String to HEX</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>binhex</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Converts a given String or Array to HEX and dumps it</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-binhex</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>array</maml:name>
					<maml:description>
						<maml:para>Array that should be converted to HEX</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>array</maml:name>
				<maml:description>
					<maml:para>Array that should be converted to HEX</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>String
Array</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-binhex 1234</dev:code>
				<dev:remarks>
					<maml:para># Return the HEX Value (4d2) of the String 1234</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-HashTable</command:name>
			<maml:description>
				<maml:para>Convert an object to a HashTable</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>HashTable</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Convert an object to a HashTable excluding certain types.  For example,
ListDictionaryInternal doesn&#39;t support serialization therefore
can&#39;t be converted to JSON.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-HashTable</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>Object to convert</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>ExcludeTypeName</maml:name>
					<maml:description>
						<maml:para>Array of types to skip adding to resulting HashTable.  Default is to skip
ListDictionaryInternal and Object arrays.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>MaxDepth</maml:name>
					<maml:description>
						<maml:para>Maximum depth of embedded objects to convert.  Default is 4.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Object to convert</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>ExcludeTypeName</maml:name>
				<maml:description>
					<maml:para>Array of types to skip adding to resulting HashTable.  Default is to skip
ListDictionaryInternal and Object arrays.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>@(&quot;ListDictionaryInternal&quot;, &quot;Object[]&quot;)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>MaxDepth</maml:name>
				<maml:description>
					<maml:para>Maximum depth of embedded objects to convert.  Default is 4.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>4</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>$bios = get-ciminstance win32_bios</dev:code>
				<dev:remarks>
					<maml:para>$bios | ConvertTo-HashTable</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-hex</command:name>
			<maml:description>
				<maml:para>Converts a given integer to HEX</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>hex</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Converts any given Integer (INT) to Hex and dumps it to the Console</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-hex</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>dec</maml:name>
					<maml:description>
						<maml:para>N.A.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>dec</maml:name>
				<maml:description>
					<maml:para>N.A.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
				<dev:type>
					<maml:name>Int64</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Integer</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>HEX Value of the given Integer</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Renamed function
Just a little helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-hex &quot;100&quot;</dev:code>
				<dev:remarks>
					<maml:para>0x64</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-PlainText</command:name>
			<maml:description>
				<maml:para>Convert a secure string back to plain text</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>PlainText</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Convert a secure string back to plain text</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-PlainText</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="SecureString">
					<maml:name>secure</maml:name>
					<maml:description>
						<maml:para>Secure String to convert</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="SecureString">
				<maml:name>secure</maml:name>
				<maml:description>
					<maml:para>Secure String to convert</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
				<dev:type>
					<maml:name>SecureString</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-StringList</command:name>
			<maml:description>
				<maml:para>Function to convert an array into a string list with a delimiter.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>StringList</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Function to convert an array into a string list with a delimiter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-StringList</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Array</maml:name>
					<maml:description>
						<maml:para>Specifies the array to process.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Delimiter</maml:name>
					<maml:description>
						<maml:para>Separator between value, default is &quot;,&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Array</maml:name>
				<maml:description>
					<maml:para>Specifies the array to process.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
				<dev:type>
					<maml:name>Array</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Delimiter</maml:name>
				<maml:description>
					<maml:para>Separator between value, default is &quot;,&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>,</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Array</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Computers = &quot;Computer1&quot;,&quot;Computer2&quot;</dev:code>
				<dev:remarks>
					<maml:para>ConvertTo-StringList -Array $Computers

Output:
Computer1,Computer2</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Computers = &quot;Computer1&quot;,&quot;Computer2&quot;</dev:code>
				<dev:remarks>
					<maml:para>ConvertTo-StringList -Array $Computers -Delimiter &quot;__&quot;

Output:
Computer1__Computer2</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Computers = &quot;Computer1&quot;</dev:code>
				<dev:remarks>
					<maml:para>ConvertTo-StringList -Array $Computers -Delimiter &quot;__&quot;

Output:
Computer1</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-UrlEncoded</command:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>UrlEncoded</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-UrlEncoded</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://dfch.biz/biz/dfch/PS/System/Utilities/ConvertTo-UrlEncoded/</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Create-ZIP</command:name>
			<maml:description>
				<maml:para>Create a ZIP archive of a given file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Create</command:verb>
			<command:noun>ZIP</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Create a ZIP archive of a given file.
By default within the same directory and the same name as the input file.
This can be changed via command line parameters</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Create-ZIP</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Input">
					<maml:name>InputFile</maml:name>
					<maml:description>
						<maml:para>Mandatory

The parameter InputFile is the file that should be compressed.
You can use it like this: &quot;ClutterReport-20150617171648.csv&quot;,
or with a full path like this:
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Output">
					<maml:name>OutputFile</maml:name>
					<maml:description>
						<maml:para>Optional

You can use it like this: &quot;ClutterReport-20150617171648&quot;,
or with a full path like this:
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648&quot;
Do not append the extension!</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>OutputPath</maml:name>
					<maml:description>
						<maml:para>Optional

By default the new archive will be created in the same directory as the input
file,
if you would like to have it in another directory specify it here like this:
&quot;C:\temp\&quot;
The directory must exist!</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Input">
				<maml:name>InputFile</maml:name>
				<maml:description>
					<maml:para>Mandatory

The parameter InputFile is the file that should be compressed.
You can use it like this: &quot;ClutterReport-20150617171648.csv&quot;,
or with a full path like this:
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Output">
				<maml:name>OutputFile</maml:name>
				<maml:description>
					<maml:para>Optional

You can use it like this: &quot;ClutterReport-20150617171648&quot;,
or with a full path like this:
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648&quot;
Do not append the extension!</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>OutputPath</maml:name>
				<maml:description>
					<maml:para>Optional

By default the new archive will be created in the same directory as the input
file,
if you would like to have it in another directory specify it here like this:
&quot;C:\temp\&quot;
The directory must exist!</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Parameters above</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Compress File</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Notes</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Create-ZIP -InputFile &quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot;</dev:code>
				<dev:remarks>
					<maml:para>This will create the archive &quot;ClutterReport-20150617171648.zip&quot; from the given
input file
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot;.
The new archive will be located in &quot;C:\scripts\PowerShell\export\&quot;!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Create-ZIP -InputFile &quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot; -OutputFile &quot;NewClutterReport&quot;</dev:code>
				<dev:remarks>
					<maml:para>This will create the archive &quot;NewClutterReport.zip&quot; from the given input file
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot;.
The new archive will be located in &quot;C:\scripts\PowerShell\export\&quot;!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Create-ZIP -InputFile &quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot; -OutputPath &quot;C:\temp\&quot;</dev:code>
				<dev:remarks>
					<maml:para>This will create the archive &quot;ClutterReport-20150617171648.zip&quot; from the given
input file
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot;.
The new archive will be located in &quot;C:\temp\&quot;! The directory must exist!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Create-ZIP -InputFile &quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot; -OutputFile &quot;NewClutterReport&quot; -OutputPath &quot;C:\temp\&quot;</dev:code>
				<dev:remarks>
					<maml:para>This will create the archive &quot;NewClutterReport.zip&quot; from the given input file
&quot;C:\scripts\PowerShell\export\ClutterReport-20150617171648.csv&quot;.
The new archive will be located in &quot;C:\temp\&quot;! The directory must exist!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Disable-RemoteDesktop</command:name>
			<maml:description>
				<maml:para>The function Disable-RemoteDesktop will disable RemoteDesktop on a local or remote machine.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Disable</command:verb>
			<command:noun>RemoteDesktop</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>The function Disable-RemoteDesktop will disable RemoteDesktop on a local or
remote machine.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Disable-RemoteDesktop</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CimSession</maml:name>
					<maml:description>
						<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">CimSession[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Disable-RemoteDesktop</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Specifies the computername</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
					<maml:name>Credential</maml:name>
					<maml:description>
						<maml:para>Specifies the credential to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CimSession</maml:name>
				<maml:description>
					<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">CimSession[]</command:parameterValue>
				<dev:type>
					<maml:name>CimSession[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Specifies the computername</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Specifies the credential to use</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>[System.Management.Automation.PSCredential]::Empty</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -ComputerName DC01</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -ComputerName DC01 -Credential (Get-Credential -cred &quot;FX\SuperAdmin&quot;)</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -CimSession $Session</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -CimSession $Session1,$session2,$session3</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Edit-HostsFile</command:name>
			<maml:description>
				<maml:para>Edit the Windows Host file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Edit</command:verb>
			<command:noun>HostsFile</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Shortcut to quickly edit the Windows host File. Might be useful for testing
things without changing the regular DNS.
Handle with care!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Edit-HostsFile</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Additional information about the function.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Edit-HostsFile</dev:code>
				<dev:remarks>
					<maml:para>Opens the Editor configured within the VisualEditor variable to edit the
Windows Host file</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Enable-RemoteDesktop</command:name>
			<maml:description>
				<maml:para>The function Enable-RemoteDesktop will enable RemoteDesktop on a local or remote machine.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Enable</command:verb>
			<command:noun>RemoteDesktop</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>The function Enable-RemoteDesktop will enable RemoteDesktop on a local or
remote machine.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Enable-RemoteDesktop</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CimSession</maml:name>
					<maml:description>
						<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">CimSession[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Enable-RemoteDesktop</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Specifies the computername</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
					<maml:name>Credential</maml:name>
					<maml:description>
						<maml:para>Specifies the credential to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CimSession</maml:name>
				<maml:description>
					<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">CimSession[]</command:parameterValue>
				<dev:type>
					<maml:name>CimSession[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Specifies the computername</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Specifies the credential to use</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>[System.Management.Automation.PSCredential]::Empty</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -ComputerName DC01</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -ComputerName DC01 -Credential (Get-Credential -cred &quot;FX\SuperAdmin&quot;)</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -CimSession $Session</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -CimSession $Session1,$session2,$session3</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Expand-CompressedItem</command:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Expand</command:verb>
			<command:noun>CompressedItem</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Expand-CompressedItem</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DirectoryInfo</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Format</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">DirectoryInfo</command:parameterValue>
				<dev:type>
					<maml:name>DirectoryInfo</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Format</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://dfch.biz/biz/dfch/PS/System/Utilities/Expand-CompressedItem/</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>explore</command:name>
			<maml:description>
				<maml:para>Open explorer in this directory</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>explore</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Open the Windows Explorer in this directory</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>explore</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Location">
					<maml:name>loc</maml:name>
					<maml:description>
						<maml:para>A description of the loc parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Location">
				<maml:name>loc</maml:name>
				<maml:description>
					<maml:para>A description of the loc parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>.</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a little helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>explore</dev:code>
				<dev:remarks>
					<maml:para># Open the Windows Explorer in this directory</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>export-session</command:name>
			<maml:description>
				<maml:para>Export PowerShell session info to a file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>export</command:verb>
			<command:noun>session</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This is a (very) poor man approach to save some session infos

Our concept of session is simple and only considers:
- history
- The current directory

But still can be very handy and useful. If you type in some sneaky commands,
or some very complex things and you did not copied these to another file or
script
it can save you a lot of time if you need to do it again (And this is often the
case)

Even if you just want to dump it quick to copy it some when later to a
documentation or
script this might be useful.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>export-session</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>sessionName</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>sessionName</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>&quot;session-$(get-date -f yyyyMMddhh)&quot;</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-BingSearch</command:name>
			<maml:description>
				<maml:para>Get the Bing results for a string</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>BingSearch</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Get the latest Bin search results for a given string and presents it on the
console</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-BingSearch</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Search">
					<maml:name>searchstring</maml:name>
					<maml:description>
						<maml:para>String to search for on Bing</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Search">
				<maml:name>searchstring</maml:name>
				<maml:description>
					<maml:para>String to search for on Bing</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>$(throw &quot;Please specify a search string.&quot;)</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is a function that Michael found useful, so we adopted and tweaked it a
bit.
The original function was found somewhere on the Internet!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BingSearch -searchstring:&quot;Joerg Hochwald&quot;</dev:code>
				<dev:remarks>
					<maml:para>Return the Bing Search Results for &quot;Joerg Hochwald&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BingSearch -searchstring:&quot;KreativSign GmbH&quot;</dev:code>
				<dev:remarks>
					<maml:para>Return the Bing Search Results for &quot;KreativSign GmbH&quot; as a formated List (fl =
Format-List)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-DefaultMessage</command:name>
			<maml:description>
				<maml:para>Helper Function to show default message used in VERBOSE/DEBUG/WARNING</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>DefaultMessage</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Helper Function to show default message used in VERBOSE/DEBUG/WARNING
and... HOST in some case.
This is helpful to standardize the output messages</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-DefaultMessage</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Specifies the message to show</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Specifies the message to show</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an ideas of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>get-hash</command:name>
			<maml:description>
				<maml:para>Show the HASH Value of a given File</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>get</command:verb>
			<command:noun>hash</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Shows the MD5 Hash value of a given File</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>get-hash</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
					<maml:name>value</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
				<maml:name>value</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>get-hash .\profile.ps1</dev:code>
				<dev:remarks>
					<maml:para>81d84c612566cb633aff63e3f4f27a28

Return the MD5 Hash of .\profile.ps1</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-HostFileEntry</command:name>
			<maml:description>
				<maml:para>Dumps the HOSTS File to the Console</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>HostFileEntry</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Dumps the HOSTS File to the Console
It dumps the WINDIR\System32\drivers\etc\hosts</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-HostFileEntry</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible
Sometimes I need to know what is set in the HOSTS File... So I came up with
that approach.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-HostFileEntry</dev:code>
				<dev:remarks>
					<maml:para>IP                                                              Hostname
--                                                              --------
10.211.55.123                                                   GOV13714W7
10.211.55.10                                                    jhwsrv08R2
10.211.55.125                                                   KSWIN07DEV

Dumps the HOSTS File to the Console</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-IsGdURL</command:name>
			<maml:description>
				<maml:para>Get a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>IsGdURL</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Get a Short URL using the IS.GD Service</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-IsGdURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2GD">
					<maml:name>URL</maml:name>
					<maml:description>
						<maml:para>Long URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2GD">
				<maml:name>URL</maml:name>
				<maml:description>
					<maml:para>Long URL</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Additional information about the function.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsGdURL -URL &#39;http://hochwald.net&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://is.gd/FkMP5v

Request the IS.GD for http://hochwald.net.
In this example the return is http://is.gd/FkMP5v</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-IsSessionElevated</command:name>
			<maml:description>
				<maml:para>Is the Session started as admin (Elevated)</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>IsSessionElevated</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Quick Helper that return if the session is started as admin (Elevated)
It returns a Boolean (True or False) and sets a global variable
(IsSessionElevated) with
this Boolean value. This might be useful for further use!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-IsSessionElevated</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Quick Helper that return if the session is started as admin (Elevated)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsSessionElevated</dev:code>
				<dev:remarks>
					<maml:para>True
# If the session is elevated</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsSessionElevated</dev:code>
				<dev:remarks>
					<maml:para>False
# If the session is not elevated</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-IsVirtual</command:name>
			<maml:description>
				<maml:para>Check if this is a Virtual Machine</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>IsVirtual</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>If this is a virtual System the Boolean is True, if not it is False</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-IsVirtual</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>boolean</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The Function name is changed!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsVirtual</dev:code>
				<dev:remarks>
					<maml:para>True

If this is a virtual System the Boolean is True, if not it is False</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsVirtual</dev:code>
				<dev:remarks>
					<maml:para>False

If this is not a virtual System the Boolean is False, if so it is True</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongURL</command:name>
			<maml:description>
				<maml:para>Expand a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongURL</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Expand a Short URL via the untiny.me
This service supports all well known (and a lot other) short UR L services!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Exapnd">
					<maml:name>URL</maml:name>
					<maml:description>
						<maml:para>Short URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Exapnd">
				<maml:name>URL</maml:name>
				<maml:description>
					<maml:para>Short URL</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This service supports all well known (and a lot other) short UR L services!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongURL -URL &#39;http://cutt.us/KX5CD&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://hochwald.net

Get the Long URL (http://hochwald.net) for a given Short URL</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MOTD</command:name>
			<maml:description>
				<maml:para>Displays system information to a host.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MOTD</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>The Get-MOTD cmdlet is a system information tool written in PowerShell.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MOTD</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>inspired by this:
https://github.com/michalmillar/ps-motd/blob/master/Get-MOTD.ps1

The Microsoft Logo, PowerShell, Windows and some others are registered
Trademarks by
Microsoft Corporation. I do not own them, i just use them here :-)

I moved some stuff in a separate function to make it reusable</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MOTD</dev:code>
				<dev:remarks>
					<maml:para># Display the colorful Message of the Day with a Microsoft Logo and some system
infos</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>get-myprocess</command:name>
			<maml:description>
				<maml:para>Get our own process information</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>get</command:verb>
			<command:noun>myprocess</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Get our own process information about the PowerShell Session</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>get-myprocess</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>process information</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a little helper function that might be useful if you have a long running
shell session</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>get-myprocess</dev:code>
				<dev:remarks>
					<maml:para>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName
-------  ------    -----      ----- -----   ------     -- -----------
    511      44    79252      93428   664   11,653   3932 powershell</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NetFramework</command:name>
			<maml:description>
				<maml:para>This function will retrieve the list of Framework Installed on the computer.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NetFramework</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>A detailed description of the Get-NetFramework function.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NetFramework</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Computer Name</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Credentials</maml:name>
					<maml:description>
						<maml:para>Credentials to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Computer Name</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Credentials</maml:name>
				<maml:description>
					<maml:para>Credentials to use</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>$Credential</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetFramework</dev:code>
				<dev:remarks>
					<maml:para>PSChildName                                   Version
-----------                                   -------
v2.0.50727                                    2.0.50727.4927
v3.0                                          3.0.30729.4926
Windows Communication Foundation              3.0.4506.4926
Windows Presentation Foundation               3.0.6920.4902
v3.5                                          3.5.30729.4926
Client                                        4.5.51641
Full                                          4.5.51641
Client                                        4.0.0.0</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NetStat</command:name>
			<maml:description>
				<maml:para>This function will get the output of netstat -n and parse the output</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NetStat</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This function will get the output of netstat -n and parse the output</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NetStat</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Idea: http://www.lazywinadmin.com/2014/08/powershell-parse-this-netstatexe.html</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NewPassword</command:name>
			<maml:description>
				<maml:para>Generates a New password with varying length and Complexity,</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NewPassword</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Generate a New Password for a User.  Defaults to 8 Characters
with Moderate Complexity.  Usage

GET-NEWPASSWORD or

GET-NEWPASSWORD $Length $Complexity

Where $Length is an integer from 1 to as high as you want
and $Complexity is an Integer from 1 to 4</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NewPassword</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Length">
					<maml:name>PasswordLength</maml:name>
					<maml:description>
						<maml:para>Password Length</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Level">
					<maml:name>Complexity</maml:name>
					<maml:description>
						<maml:para>Complexity Level</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Length">
				<maml:name>PasswordLength</maml:name>
				<maml:description>
					<maml:para>Password Length</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>8</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Level">
				<maml:name>Complexity</maml:name>
				<maml:description>
					<maml:para>Complexity Level</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>3</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The Complexity falls into the following setup for the Complexity level
1 - Pure lowercase Ascii
2 - Mix Uppercase and Lowercase Ascii
3 - Ascii Upper/Lower with Numbers
4 - Ascii Upper/Lower with Numbers and Punctuation</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPassword</dev:code>
				<dev:remarks>
					<maml:para>zemermyya784vKx93

Create New Password based on the defaults</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPassword 9 1</dev:code>
				<dev:remarks>
					<maml:para>zemermyya

Generate a Password of strictly Uppercase letters that is 9 letters long</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPassword 5</dev:code>
				<dev:remarks>
					<maml:para>zemermyya784vKx93K2sqG

Generate a Highly Complex password 5 letters long</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>$MYPASSWORD=ConvertTo-SecureString (Get-NewPassword 8 2) -asplaintext -force</dev:code>
				<dev:remarks>
					<maml:para>Create a new 8 Character Password of Uppercase/Lowercase and store
as a Secure.String in Variable called $MYPASSWORD</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NtpTime</command:name>
			<maml:description>
				<maml:para>Get the NTP Time from a given Server</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NtpTime</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Get the NTP Time from a given Server.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NtpTime</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="NETServer">
					<maml:name>Server</maml:name>
					<maml:description>
						<maml:para>NTP Server to use. The default is de.pool.ntp.org</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="NETServer">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>NTP Server to use. The default is de.pool.ntp.org</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>de.pool.ntp.org</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.DateTime</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This sends an NTP time packet to the specified NTP server and reads back the
response.
The NTP time packet from the server is decoded and returned.

Note: this uses NTP (rfc-1305: http://www.faqs.org/rfcs/rfc1305.html) on UDP
123.
Because the function makes a single call to a single server this is strictly a
SNTP client (rfc-2030).
Although the SNTP protocol data is similar (and can be identical) and the
clients
and servers are often unable to distinguish the difference.  Where SNTP differs
is that
is does not accumulate historical data (to enable statistical averaging) and
does not
retain a session between client and server.

An alternative to NTP or SNTP is to use Daytime (rfc-867) on TCP port 13 –
although this is an old protocol and is not supported by all NTP servers.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: https://chrisjwarwick.wordpress.com/2012/08/26/getting-ntpsntp-network-time-with-powershell/</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-PendingReboot</command:name>
			<maml:description>
				<maml:para>Gets the pending reboot status on a local or remote computer.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>PendingReboot</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This function will query the registry on a local or remote computer and
determine if the
system is pending a reboot, from either Microsoft Patching or a Software
Installation.
For Windows 2008+ the function will query the CBS registry key as another
factor in determining
pending reboot state.  &quot;PendingFileRenameOperations&quot; and &quot;Auto
Update\RebootRequired&quot; are observed
as being consistant across Windows Server 2003 &amp; 2008.

CBServicing = Component Based Servicing (Windows 2008)
WindowsUpdate = Windows Update / Auto Update (Windows 2003 / 2008)
CCMClientSDK = SCCM 2012 Clients only (DetermineIfRebootPending method)
otherwise $null value
PendFileRename = PendingFileRenameOperations (Windows 2003 / 2008)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-PendingReboot</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="CN , Computer">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>A single Computer or an array of computer names. The default is localhost
($env:COMPUTERNAME).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="CN , Computer">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>A single Computer or an array of computer names. The default is localhost
($env:COMPUTERNAME).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Brian Wilhite</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PendingReboot -ComputerName (Get-Content C:\ServerList.txt) | Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>Computer CBServicing WindowsUpdate CCMClientSDK PendFileRename PendFileRenVal
RebootPending
-------- ----------- ------------- ------------ -------------- --------------
-------------
DC01     False   False           False      False
DC02     False   False           False      False
FS01     False   False           False      False

This example will capture the contents of C:\ServerList.txt and query the
pending reboot
information from the systems contained in the file and display the output in a
table. The
null values are by design, since these systems do not have the SCCM 2012 client
installed,
nor was the PendingFileRenameOperations value populated.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PendingReboot</dev:code>
				<dev:remarks>
					<maml:para>Computer     : WKS01
CBServicing  : False
WindowsUpdate      : True
CCMClient    : False
PendComputerRename : False
PendFileRename     : False
PendFileRenVal     :
RebootPending      : True

This example will query the local machine for pending reboot information.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Servers = Get-Content C:\Servers.txt</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; Get-PendingReboot -Computer $Servers | Export-Csv
C:\PendingRebootReport.csv -NoTypeInformation

This example will create a report that contains pending reboot information.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Component-Based Servicing: http://technet.microsoft.com/en-us/library/cc756291(v=WS.10).aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>PendingFileRename/Auto Update: http://support.microsoft.com/kb/2723674</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://technet.microsoft.com/en-us/library/cc960241.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://blogs.msdn.com/b/hansr/archive/2006/02/17/patchreboot.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>SCCM 2012/CCM_ClientSDK: http://msdn.microsoft.com/en-us/library/jj902723.aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ServiceStatus</command:name>
			<maml:description>
				<maml:para>List Services where StartMode is AUTOMATIC that are NOT running</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ServiceStatus</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This functionwill list services from a local or remote computer where the
StartMode property is set to &quot;Automatic&quot; and where the state is different from
RUNNING (so mostly where the state is NOT RUNNING)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ServiceStatus</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Computer Name to execute the function</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Computer Name to execute the function</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just an inital Version of the Function, it might still need some optimization.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ServiceStatus</dev:code>
				<dev:remarks>
					<maml:para>DisplayName                                  Name
StartMode State
-----------                                  ----
--------- -----
Microsoft .NET Framework NGEN v4.0.30319_X86 clr_optimization_v4.0.30319_32
Auto      Stopped
Microsoft .NET Framework NGEN v4.0.30319_X64 clr_optimization_v4.0.30319_64
Auto      Stopped
Multimedia Class Scheduler                   MMCSS
Auto      Stopped</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>get-sessionfile</command:name>
			<maml:description>
				<maml:para>Restore PowerShell Session information</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>get</command:verb>
			<command:noun>sessionfile</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This command shows many PowerShell Session informations.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>get-sessionfile</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Session">
					<maml:name>sessionName</maml:name>
					<maml:description>
						<maml:para>Name of the Session you would like to dump</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Session">
				<maml:name>sessionName</maml:name>
				<maml:description>
					<maml:para>Name of the Session you would like to dump</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>get-sessionfile $O365Session</dev:code>
				<dev:remarks>
					<maml:para>C:\Users\adm.jhochwald\AppData\Local\Temp\[PSSession]Session2

# Returns the Session File for a given Session</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>get-sessionfile</dev:code>
				<dev:remarks>
					<maml:para>C:\Users\adm.jhochwald\AppData\Local\Temp\

# Returns the Session File of the running session, cloud be none!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>get-syntax</command:name>
			<maml:description>
				<maml:para>Get the syntax of a cmdlet, even if we have no help for it</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>get</command:verb>
			<command:noun>syntax</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Helper function to get the syntax of a alias or cmdlet, even if we have no help
for it</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>get-syntax</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
					<maml:name>cmdlet</maml:name>
					<maml:description>
						<maml:para>command-let that you want to check</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
				<maml:name>cmdlet</maml:name>
				<maml:description>
					<maml:para>command-let that you want to check</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>get-syntax get-syntax</dev:code>
				<dev:remarks>
					<maml:para># Get the syntax and parameters for the cmdlet &quot;get-syntax&quot;.
# Makes no sense at all, but this is just an example!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-SysInfo</command:name>
			<maml:description>
				<maml:para>Displays Information about the system</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>SysInfo</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Displays Information about the system it is started on</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-SysInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea found here:
https://github.com/michalmillar/ps-motd/blob/master/Get-MOTD.ps1</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SysInfo</dev:code>
				<dev:remarks>
					<maml:para># Display some system infos</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TcpPortStatus</command:name>
			<maml:description>
				<maml:para>Check a TCP Port</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TcpPortStatus</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Opens a connection to a given (or default) TCP Port to a given (or default)
server.
This is not a simple port ping, it creates a real connection to see if the port
is alive!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TcpPortStatus</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Port</maml:name>
					<maml:description>
						<maml:para>Default is 587
e.g. &quot;25&quot;
Port to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Server</maml:name>
					<maml:description>
						<maml:para>e.g. &quot;outlook.office365.com&quot; or &quot;192.168.16.10&quot;
SMTP Server to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Default is 587
e.g. &quot;25&quot;
Port to use</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>587</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>e.g. &quot;outlook.office365.com&quot; or &quot;192.168.16.10&quot;
SMTP Server to use</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>boolean</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Internal Helper function to check if we can reach a server via a TCP connection
on a given port</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TcpPortStatus</dev:code>
				<dev:remarks>
					<maml:para>Check port 587/TCP on the default Server</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TcpPortStatus -Port:25 -Server:mx.net-experts.net</dev:code>
				<dev:remarks>
					<maml:para>True

Check port 25/TCP on Server mx.net-experts.net</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TempFile</command:name>
			<maml:description>
				<maml:para>Creates a string with a temp file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TempFile</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Creates a string with a temp file</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TempFile</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Extension</maml:name>
					<maml:description>
						<maml:para>File Extension as a string.
The default is &quot;tmp&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Extension</maml:name>
				<maml:description>
					<maml:para>File Extension as a string.
The default is &quot;tmp&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>tmp</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Helper to avoid &quot;System.IO.Path]::GetTempFileName()&quot; usage.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-TempFile</dev:code>
				<dev:remarks>
					<maml:para>C:\Users\josh\AppData\Local\Temp\332ddb9a-5e52-4687-aa01-1d67ab6ae2b1.tmp

Returns a String of the Temp File with the extension TMP.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-TempFile -Extension txt</dev:code>
				<dev:remarks>
					<maml:para>C:\Users\josh\AppData\Local\Temp\332ddb9a-5e52-4687-aa01-1d67ab6ae2b1.txt

Returns a String of the Temp File with the extension TXT</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$foo = (New-TempFile)</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; New-Item -Path $foo -Force -Confirm:$false
PS C:\&gt; Add-Content -Path:$LogPath -Value:&quot;Test&quot; -Encoding UTF8 -Force
C:\Users\josh\AppData\Local\Temp\d08cec6f-8697-44db-9fba-2c369963a017.tmp

Creates a temp File:
C:\Users\josh\AppData\Local\Temp\d08cec6f-8697-44db-9fba-2c369963a017.tmp
And fill the newly created file with the String &quot;Test&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Idea: http://powershell.com/cs/blogs/tips/archive/2015/10/15/creating-temporary-filenames.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TimeStamp</command:name>
			<maml:description>
				<maml:para>Get-TimeStamp</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TimeStamp</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Get-TimeStamp</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TimeStamp</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible
It is just a kind of a leftover: Used that within my old logging functions a lot</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TimeStamp</dev:code>
				<dev:remarks>
					<maml:para>2015-12-13 18:05:18

Get a Timestamp as i would like it.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TinyURL</command:name>
			<maml:description>
				<maml:para>Get a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TinyURL</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Get a Short URL using the TINYURL.COM Service</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TinyURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Tiny">
					<maml:name>URL</maml:name>
					<maml:description>
						<maml:para>Long URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Tiny">
				<maml:name>URL</maml:name>
				<maml:description>
					<maml:para>Long URL</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Still a beta Version!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TinyURL -URL &#39;http://hochwald.net&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://tinyurl.com/yc63nbh

Request the TINYURL for http://hochwald.net.
In this example the return is http://tinyurl.com/yc63nbh</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TopProcesses</command:name>
			<maml:description>
				<maml:para>Make the PowerShell a bit more *NIX like</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TopProcesses</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This is a PowerShell Version of the well known *NIX like TOP</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TopProcesses</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TrImURL</command:name>
			<maml:description>
				<maml:para>Get a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TrImURL</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Get a Short URL using the TR.IM Service</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TrImURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Trim">
					<maml:name>URL</maml:name>
					<maml:description>
						<maml:para>Long URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Trim">
				<maml:name>URL</maml:name>
				<maml:description>
					<maml:para>Long URL</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The service is offline at the moment!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TrImURL -URL &#39;http://hochwald.net&#39;</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Uptime</command:name>
			<maml:description>
				<maml:para>Show how long system has been running</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Uptime</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Uni* like Uptime - The uptime utility displays the current time,
the length of time the system has been up</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Uptime</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Uptime</dev:code>
				<dev:remarks>
					<maml:para>Uptime: 0 days, 2 hours, 11 minutes

Returns the uptime of the system, the time since last reboot/startup</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-uuid</command:name>
			<maml:description>
				<maml:para>Generates a UUID String</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>uuid</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Generates a UUID String and is a uuidgen.exe replacement</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-uuid</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>UUID String like 32f35f41-3dcb-436f-baa9-77b621b90af0</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a little helper function
If you have Visual Studio installed, you might find the function useless!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-uuid</dev:code>
				<dev:remarks>
					<maml:para>a08cdabe-f598-4930-a537-80e7d9f15dc3

Generates a UUID String</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>GnuGrep</command:name>
			<maml:description>
				<maml:para>File pattern searcher</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>GnuGrep</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This command emulates the well known (and loved?) GNU file pattern searcher</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>GnuGrep</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PaternString">
					<maml:name>pattern</maml:name>
					<maml:description>
						<maml:para>Pattern (STRING) - Mandatory</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="FFilter">
					<maml:name>filefilter</maml:name>
					<maml:description>
						<maml:para>File (STRING) - Mandatory</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Recursive">
					<maml:name>r</maml:name>
					<maml:description>
						<maml:para>Recurse</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="IgnoreCase">
					<maml:name>i</maml:name>
					<maml:description>
						<maml:para>Ignore case</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="ListFilenames">
					<maml:name>l</maml:name>
					<maml:description>
						<maml:para>List filenames</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PaternString">
				<maml:name>pattern</maml:name>
				<maml:description>
					<maml:para>Pattern (STRING) - Mandatory</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="FFilter">
				<maml:name>filefilter</maml:name>
				<maml:description>
					<maml:para>File (STRING) - Mandatory</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Recursive">
				<maml:name>r</maml:name>
				<maml:description>
					<maml:para>Recurse</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="IgnoreCase">
				<maml:name>i</maml:name>
				<maml:description>
					<maml:para>Ignore case</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="ListFilenames">
				<maml:name>l</maml:name>
				<maml:description>
					<maml:para>List filenames</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>head</command:name>
			<maml:description>
				<maml:para>display first lines of a file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>head</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This filter displays the first count lines or bytes of each of the specified
files,
or of the standard input if no files are specified.

If count is omitted it defaults to 10.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>head</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
					<maml:name>file</maml:name>
					<maml:description>
						<maml:para>Filename</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Counter">
					<maml:name>count</maml:name>
					<maml:description>
						<maml:para>A description of the count parameter.
The Default is 10.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
				<maml:name>file</maml:name>
				<maml:description>
					<maml:para>Filename</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Counter">
				<maml:name>count</maml:name>
				<maml:description>
					<maml:para>A description of the count parameter.
The Default is 10.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>10</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>help</command:name>
			<maml:description>
				<maml:para>Wrapper that use the cmdlet Get-Help -full</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>help</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Wrapper that use the regular cmdlet Get-Help -full to show all technical
informations about the given command</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>help</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>help get-item</dev:code>
				<dev:remarks>
					<maml:para>Show the full technical informations of the get-item cmdlet</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>import-session</command:name>
			<maml:description>
				<maml:para>Import a PowerShell session info from file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>import</command:verb>
			<command:noun>session</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This is a (very) poor man approach to restore some session infos

Our concept of session is simple and only considers:
- history
- The current directory

But still can be very handy and useful. If you type in some sneaky commands,
or some very complex things and you did not copied these to another file or
script
it can save you a lot of time if you need to do it again (And this is often the
case)

Even if you just want to dump it quick to copy it some when later to a
documentation or
script this might be useful.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>import-session</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Session">
					<maml:name>sessionName</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Session">
				<maml:name>sessionName</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Initialize-Modules</command:name>
			<maml:description>
				<maml:para>Initialize PowerShell Modules</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Initialize</command:verb>
			<command:noun>Modules</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Initialize PowerShell Modules</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Initialize-Modules</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Needs to be documented</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-VisualEditor</command:name>
			<maml:description>
				<maml:para>Wrapper to edit files</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>VisualEditor</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This is a quick wrapper that edits files with editor from the VisualEditor
variable</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-VisualEditor</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
					<maml:name>args</maml:name>
					<maml:description>
						<maml:para>Arguments</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
				<maml:name>args</maml:name>
				<maml:description>
					<maml:para>Arguments</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-VisualEditor example.txt</dev:code>
				<dev:remarks>
					<maml:para># Invokes Note++ or ISE and edits &quot;example.txt&quot;.
# This is possible, even if the File does not exists... The editor should ask
you if it should create it for you</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-VisualEditor</dev:code>
				<dev:remarks>
					<maml:para>Invokes Note++ or ISE without opening a file</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>JavaLove</command:name>
			<maml:description>
				<maml:para>Set the JAVAHOME Variable to use JDK and/or JRE instances withing the Session</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>JavaLove</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>You are still using Java Stuff?
OK... Your choice, so we do you the favor and create/fill the variable JAVAHOME
based on the JDK/JRE that we found.
It also append the Info to the PATH variable to make things easier for you.
But think about dropping the buggy Java crap as soon as you can. Java is not
only buggy, there are also many Security issues with it!

By the way: I hate Java!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>JavaLove</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>JavaLove</dev:code>
				<dev:remarks>
					<maml:para>Find the installed JDK and/or JRE version and crate the JDK_HOME and JAVA_HOME
variables for you.
It also appends the Path to the PATH  and CLASSPATH variable to make it easier
for you.

But do you still need java?</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ll</command:name>
			<maml:description>
				<maml:para>Quick helper to make my PowerShell a bit more like *nix</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>ll</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Everyone ever used a modern Unix and/or Linux system knows and love the colored
output of LL
This function is hack to emulate that on PowerShell.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ll</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Directory">
					<maml:name>dir</maml:name>
					<maml:description>
						<maml:para>Show the content of this Directory</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="ShowAll">
					<maml:name>all</maml:name>
					<maml:description>
						<maml:para>Show all files, included the hidden ones!</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Directory">
				<maml:name>dir</maml:name>
				<maml:description>
					<maml:para>Show the content of this Directory</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>.</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="ShowAll">
				<maml:name>all</maml:name>
				<maml:description>
					<maml:para>Show all files, included the hidden ones!</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Load-Test</command:name>
			<maml:description>
				<maml:para>Load Pester Module</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Load</command:verb>
			<command:noun>Test</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Load the Pester PowerShell Module to the Global context.
Pester is a Mockup, Unit Test and Function Test Module for PowerShell</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Load-Test</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Pester Module must be installed</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Pester: https://github.com/pester/Pester</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>man</command:name>
			<maml:description>
				<maml:para>Wrapper that use the cmdlet Get-Help -full</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>man</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Wrapper that use the regular cmdlet Get-Help -full to show all technical
informations about the given command</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>man</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>help get-item</dev:code>
				<dev:remarks>
					<maml:para>Show the full technical informations of the get-item cmdlet</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>mkdir</command:name>
			<maml:description>
				<maml:para>Wrapper of New-Item</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>mkdir</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Wrapper of New-Item to create a directory</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>mkdir</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="dir">
					<maml:name>Directory</maml:name>
					<maml:description>
						<maml:para>Directory name to create</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="dir">
				<maml:name>Directory</maml:name>
				<maml:description>
					<maml:para>Directory name to create</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>mkdir test</dev:code>
				<dev:remarks>
					<maml:para>Creates a directory with the name &quot;test&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>myls</command:name>
			<maml:description>
				<maml:para>Wrapper for Get-ChildItem</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>myls</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This wrapper for Get-ChildItem shows all directories and files (even hidden
ones)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>myls</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Location">
					<maml:name>loc</maml:name>
					<maml:description>
						<maml:para>A description of the loc parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Location">
				<maml:name>loc</maml:name>
				<maml:description>
					<maml:para>A description of the loc parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>.</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>myls</dev:code>
				<dev:remarks>
					<maml:para>Show the content of the directory where you are</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>myls c:\</dev:code>
				<dev:remarks>
					<maml:para>Show the content of &quot;c:\&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>New-Guid</command:name>
			<maml:description>
				<maml:para>Creates a new Guid object and displays it to the screen</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>New</command:verb>
			<command:noun>Guid</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Uses static System.Guid.NewGuid() method to create a new Guid object</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>New-Guid</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a quick &amp; dirty helper function to generate GUID&#39;s
this is neat if you need a new GUID for an PowerShell Module.

If you have Visual Studio, you might find this function useless!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-Guid</dev:code>
				<dev:remarks>
					<maml:para>fd6bd476-db80-44e7-ab34-47437adeb8e3

Creates a new Guid object and displays its GUI to the screen</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>PoSHModuleLoader</command:name>
			<maml:description>
				<maml:para>Loads all Script modules</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>PoSHModuleLoader</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Loads all Script modules</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>PoSHModuleLoader</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Needs to be documented</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>rdp</command:name>
			<maml:description>
				<maml:para>Wrapper for the Windows RDP Client</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>rdp</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Just a wrapper for the Windows Remote Desktop Protocol (RDP) Client.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>rdp</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="host">
					<maml:name>rdphost</maml:name>
					<maml:description>
						<maml:para>String

The Host could be a host name or an IP address</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="host">
				<maml:name>rdphost</maml:name>
				<maml:description>
					<maml:para>String

The Host could be a host name or an IP address</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Additional information about the function.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>rdp SNOOPY</dev:code>
				<dev:remarks>
					<maml:para>Opens a Remote Desktop Session to the system with the Name SNOOPY</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>rdp -host:&quot;deepblue.fra01.kreativsign.net&quot;</dev:code>
				<dev:remarks>
					<maml:para>Opens a Remote Desktop Session to the system deepblue.fra01.kreativsign.net</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>rdp -host:10.10.16.10</dev:code>
				<dev:remarks>
					<maml:para>Opens a Remote Desktop Session to the system with the IPv4 address 10.10.16.10</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Reload-Module</command:name>
			<maml:description>
				<maml:para>Reloads a PowerShell Module</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Reload</command:verb>
			<command:noun>Module</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Reloads a PowerShell Module</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Reload-Module</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Module">
					<maml:name>ModuleName</maml:name>
					<maml:description>
						<maml:para>Name of the Module</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Module">
				<maml:name>ModuleName</maml:name>
				<maml:description>
					<maml:para>Name of the Module</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Needs to be documented</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Repair-DotNetFrameWorks</command:name>
			<maml:description>
				<maml:para>Optimize all installed NET Frameworks</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Repair</command:verb>
			<command:noun>DotNetFrameWorks</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Optimize all installed NET Frameworks by executing NGEN.EXE for each.

This could be useful to improve the performance and sometimes the
installation of new NET Frameworks, or even patches, makes them use
a single (the first) core only.

Why Microsoft does not execute the NGEN.EXE with each installation... no idea!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Repair-DotNetFrameWorks</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The Function name is changed!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Repair-DotNetFrameWorks</dev:code>
				<dev:remarks>
					<maml:para>Optimize all installed NET Frameworks</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-DebugOff</command:name>
			<maml:description>
				<maml:para>Turn Debug off</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>DebugOff</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Turn Debug on</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-DebugOff</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just an internal function to make my life easier!</maml:para>
			</maml:alert>
		</maml:alertSet>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-DebugOn</command:name>
			<maml:description>
				<maml:para>Turn Debug on</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>DebugOn</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Turn Debug on</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-DebugOn</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just an internal function to make my life easier!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-Encoding</command:name>
			<maml:description>
				<maml:para>Converts Encoding of text files</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>Encoding</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Allows you to change the encoding of files and folders.
It supports file extension agnostic
Please note: Overwrites original file if destination equals the path</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-Encoding</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PathName">
					<maml:name>path</maml:name>
					<maml:description>
						<maml:para>Folder or file to convert</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Destination">
					<maml:name>dest</maml:name>
					<maml:description>
						<maml:para>If you want so save the newly encoded file/files to a new location</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="enc">
					<maml:name>encoding</maml:name>
					<maml:description>
						<maml:para>Encoding method to use for the Patch or File</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PathName">
				<maml:name>path</maml:name>
				<maml:description>
					<maml:para>Folder or file to convert</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Destination">
				<maml:name>dest</maml:name>
				<maml:description>
					<maml:para>If you want so save the newly encoded file/files to a new location</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>$path</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="enc">
				<maml:name>encoding</maml:name>
				<maml:description>
					<maml:para>Encoding method to use for the Patch or File</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>BETA!!!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Encoding -path &quot;c:\windows\temps\folder1&quot; -encoding &quot;UTF8&quot;</dev:code>
				<dev:remarks>
					<maml:para># Converts all Files in the Folder c:\windows\temps\folder1 in the UTF8 format</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Encoding -path &quot;c:\windows\temps\folder1&quot; -dest &quot;c:\windows\temps\folder2&quot; -encoding &quot;UTF8&quot;</dev:code>
				<dev:remarks>
					<maml:para># Converts all Files in the Folder c:\windows\temps\folder1 in the UTF8 format
and save them to c:\windows\temps\folder2</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>(Get-Content -path &quot;c:\temp\test.txt&quot;) | Set-Content -Encoding UTF8 -Path &quot;c:\temp\test.txt&quot;</dev:code>
				<dev:remarks>
					<maml:para>This converts a single File via hardcore PowerShell without a Script.
Might be useful if you want to convert this script after a transfer!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-FileTime</command:name>
			<maml:description>
				<maml:para>Change file Creation + Modification + Last Access times</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>FileTime</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>The touch utility sets the Creation + Modification + Last Access times of files.

If any file does not exist, it is created with default permissions by default.
To prevent this, please use the -NoCreate parameter!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-FileTime</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to the File that we would like to change</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Date</maml:name>
					<maml:description>
						<maml:para>Date to set</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>AccessTime</maml:name>
					<maml:description>
						<maml:para>Change the Access Time Only</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>WriteTime</maml:name>
					<maml:description>
						<maml:para>Change the Write Time Only</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CreationTime</maml:name>
					<maml:description>
						<maml:para>Change the Creation Time Only</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>NoCreate</maml:name>
					<maml:description>
						<maml:para>Do not create a new file, if the given one does not exist.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to the File that we would like to change</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccessTime</maml:name>
				<maml:description>
					<maml:para>Change the Access Time Only</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WriteTime</maml:name>
				<maml:description>
					<maml:para>Change the Write Time Only</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreationTime</maml:name>
				<maml:description>
					<maml:para>Change the Creation Time Only</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NoCreate</maml:name>
				<maml:description>
					<maml:para>Do not create a new file, if the given one does not exist.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Date</maml:name>
				<maml:description>
					<maml:para>Date to set</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				<dev:type>
					<maml:name>DateTime</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>touch foo.txt</dev:code>
				<dev:remarks>
					<maml:para>Change the Creation + Modification + Last Access Date/time and if the file
does not already exist, create it with the default permissions.

We use the alias touch instead of Set-FileTime to make it more *NIX like!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FileTime foo.txt -NoCreate</dev:code>
				<dev:remarks>
					<maml:para>Change the Creation + Modification + Last Access Date/time if this file exists.
the -NoCreate makes sure, that the file will not be created!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FileTime foo.txt -only_modification</dev:code>
				<dev:remarks>
					<maml:para>Change only the modification time</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FileTime foo.txt -only_access</dev:code>
				<dev:remarks>
					<maml:para>Change only the last access time</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>dir . -recurse -filter &quot;*.xls&quot; | Set-FileTime</dev:code>
				<dev:remarks>
					<maml:para>Change multiple files</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Based on this: http://ss64.com/ps/syntax-touch.html</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-VisualEditor</command:name>
			<maml:description>
				<maml:para>Set the VisualEditor variable</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>VisualEditor</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Setup the VisualEditor variable. Checks if the free (GNU licensed) Notepad++ is
installed,
if so it uses this great free editor. If not the fall back is the PowerShell
ISE.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-VisualEditor</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>SuDo</command:name>
			<maml:description>
				<maml:para>Uni* like Superuser Do (Sudo)</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>SuDo</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Uni* like Superuser Do (Sudo)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>SuDo</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
					<maml:name>file</maml:name>
					<maml:description>
						<maml:para>Script/Program to run</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
				<maml:name>file</maml:name>
				<maml:description>
					<maml:para>Script/Program to run</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Still a internal Beta function!
Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>SuDo C:\scripts\PowerShell\profile.ps1</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>SuDo</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>tail</command:name>
			<maml:description>
				<maml:para>Make the PowerShell a bit more *NIX like</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>tail</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Wrapper for the PowerShell command Get-Content. It opens a given file and shows
the content...
Get-Content normally exists as soon as the end of the given file is reached,
this wrapper keeps it open
and display every new informations as soon as it appears. This could be very
useful for parsing log files.

Everyone ever used Unix or Linux known tail ;-)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>tail</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
					<maml:name>file</maml:name>
					<maml:description>
						<maml:para>File to open</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
				<maml:name>file</maml:name>
				<maml:description>
					<maml:para>File to open</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>tail C:\scripts\PowerShell\logs\create_new_OU_Structure.log</dev:code>
				<dev:remarks>
					<maml:para>Opens the given Log file
(C:\scripts\PowerShell\logs\create_new_OU_Structure.log) and shows every new
entry until you break it (CTRL + C)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-Method</command:name>
			<maml:description>
				<maml:para>Short description</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>Method</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Detailed description</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-Method</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Module">
					<maml:name>moduleName</maml:name>
					<maml:description>
						<maml:para>A description of the moduleName parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Function">
					<maml:name>functionName</maml:name>
					<maml:description>
						<maml:para>A description of the functionName parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Module">
				<maml:name>moduleName</maml:name>
				<maml:description>
					<maml:para>A description of the moduleName parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Function">
				<maml:name>functionName</maml:name>
				<maml:description>
					<maml:para>A description of the functionName parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>C:\PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Example text</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>time</command:name>
			<maml:description>
				<maml:para>Timing How Long it Takes a Script or Command to Run</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>time</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This is a quick wrapper for Measure-Command Cmdlet

Make the PowerShell a bit more *NIX like

Everyone ever used Unix or Linux known time ;-)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>time</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
					<maml:name>file</maml:name>
					<maml:description>
						<maml:para>Script or command to execute</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
				<maml:name>file</maml:name>
				<maml:description>
					<maml:para>Script or command to execute</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>time new-Bulk-devices.ps1</dev:code>
				<dev:remarks>
					<maml:para># Runs the script new-Bulk-devices.ps1 and shows how log it takes to execute</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>time Get-Service | Export-Clixml c:\scripts\test.xml</dev:code>
				<dev:remarks>
					<maml:para>When you run this command, service information will be saved to the file
Test.xml
It also shows how log it takes to execute</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Update-SysInfo</command:name>
			<maml:description>
				<maml:para>Update Information about the system</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Update</command:verb>
			<command:noun>SysInfo</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>This function updates the informations about the systems it runs on</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Update-SysInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Update-SysInfo</dev:code>
				<dev:remarks>
					<maml:para>Update Information about the system, no output!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Based on an idea found here: https://github.com/michalmillar/ps-motd/blob/master/Get-MOTD.ps1</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>whoami</command:name>
			<maml:description>
				<maml:para>Shows the windows login info</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>whoami</command:noun>
			<dev:version></dev:version>
		</command:details>
		<maml:description>
			<maml:para>Make PowerShell a bit more like *NIX! Shows the Login info as you might know it
from Unix/Linux</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>whoami</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>whoami</dev:code>
				<dev:remarks>
					<maml:para>BART\josh

Login (User) Josh on the system named BART</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Joerg Hochwald: http://hochwald.net</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: http://support.net-experts.net</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
</helpItems>